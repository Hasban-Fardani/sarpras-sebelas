name: 'Employee Management'
description: |-

  API endpoints for managing employees
endpoints:
  -
    httpMethods:
      - POST
    uri: 'employee/{employee_id}/assign'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API endpoints for managing employees
      subgroup: ''
      subgroupDescription: ''
      title: 'Make user account from employee'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: 1234567891011
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      employee_id: 1234567891011
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: unit
        type: string
        enumValues:
          - admin
          - pengawas
          - unit
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: ''
        required: true
        example: at
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      password: voluptates
      role: unit
      username: at
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|LoM2AdYqtVHFisASET41cYqqSs5h0aeNwOz5xhoB46fbe5f1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'employee/{employee_id}/unassign'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API endpoints for managing employees
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete user account'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: 1234567891011
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      employee_id: 1234567891011
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|LoM2AdYqtVHFisASET41cYqqSs5h0aeNwOz5xhoB46fbe5f1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: employees
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API endpoints for managing employees
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"success get all employees","current_page":1,"data":[{"id":1234567891011,"name":"Parwanton","position":"Wakasek Kesiswaan","phone":"0812132","email":"par@localhost.test","email_verified_at":null,"created_at":"2024-09-05T04:58:36.000000Z","updated_at":"2024-09-05T04:58:36.000000Z"},{"id":197412311994031001,"name":"Sutarsa","position":"Wakil Kepala Sekolah Bidang Sarana Prasarana","phone":"08123456789","email":"sutarsa@smkn11bdg.sch.id","email_verified_at":null,"created_at":null,"updated_at":null},{"id":197412311994031005,"name":"Zim zim","position":"Ketua Progam keahlian DKV","phone":"08123456783","email":"ani.nuraeni@smkn11bdg.sch.id","email_verified_at":null,"created_at":null,"updated_at":null},{"id":197806311994031003,"name":"Toni Kusmara","position":"Staff Sarana Prasarana","phone":"08123456781","email":"toni.kusmara@smkn11bdg.sch.id","email_verified_at":null,"created_at":null,"updated_at":null},{"id":198012311994031002,"name":"Yani","position":"Kepala Sekolah Bidang Kurikulum","phone":"08123456792","email":"yani@smkn11bdg.sch.id","email_verified_at":null,"created_at":null,"updated_at":null},{"id":198212311994031004,"name":"Ani Nuraeni","position":"Ketua Progam keahlian RPL","phone":"08123456782","email":"zim.zim@smkn11bdg.sch.id","email_verified_at":null,"created_at":null,"updated_at":null}],"first_page_url":"http:\/\/localhost:8000\/employees?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/employees?page=1","links":[{"url":null,"label":"pagination.previous","active":false},{"url":"http:\/\/localhost:8000\/employees?page=1","label":"1","active":true},{"url":null,"label":"pagination.next","active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/employees","per_page":10,"prev_page_url":null,"to":6,"total":6}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|LoM2AdYqtVHFisASET41cYqqSs5h0aeNwOz5xhoB46fbe5f1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: employees
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API endpoints for managing employees
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nip:
        name: nip
        description: validation.max.
        required: true
        example: uujvwidscdprzskvtcl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      position:
        name: position
        description: ''
        required: true
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: numquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: icrooks@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      nip: uujvwidscdprzskvtcl
      name: tempore
      position: similique
      phone: numquam
      email: icrooks@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|LoM2AdYqtVHFisASET41cYqqSs5h0aeNwOz5xhoB46fbe5f1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'employees/{id}'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API endpoints for managing employees
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the employee.'
        required: true
        example: 1234567891011
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1234567891011
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"success get employee","data":{"id":1234567891011,"name":"Parwanton","position":"Wakasek Kesiswaan","phone":"0812132","email":"par@localhost.test","email_verified_at":null,"created_at":"2024-09-05T04:58:36.000000Z","updated_at":"2024-09-05T04:58:36.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|LoM2AdYqtVHFisASET41cYqqSs5h0aeNwOz5xhoB46fbe5f1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'employees/{id}'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API endpoints for managing employees
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the employee.'
        required: true
        example: 1234567891011
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1234567891011
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nip:
        name: nip
        description: validation.max.
        required: true
        example: yxmyhwz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: pariatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      position:
        name: position
        description: ''
        required: true
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: eligendi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: fschmeler@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      nip: yxmyhwz
      name: pariatur
      position: blanditiis
      phone: eligendi
      email: fschmeler@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|LoM2AdYqtVHFisASET41cYqqSs5h0aeNwOz5xhoB46fbe5f1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'employees/{id}'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API endpoints for managing employees
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the employee.'
        required: true
        example: 1234567891011
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1234567891011
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|LoM2AdYqtVHFisASET41cYqqSs5h0aeNwOz5xhoB46fbe5f1'
    controller: null
    method: null
    route: null
    custom: []
